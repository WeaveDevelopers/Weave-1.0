<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Weave</title>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
<script src="https://unpkg.com/parse/dist/parse.min.js"></script>
<script>
  // Initialize Back4App
  Parse.initialize("erZ6XsAkbKdHAGQLHJd6EPttjSkBvZWC2422s1Pp", "GIb0aKGpr7ebT47nKP44Ngf0Ir0JzXhL1Mqrlehw");
  Parse.serverURL = 'https://parseapi.back4app.com';
</script>
<style>
  body { font-family:'Inter', sans-serif; margin:0; background:#f4f6f8; color:#111; }
  header { background:#4f46e5; color:white; padding:16px; text-align:center; font-size:24px; font-weight:600; }
  .container { max-width:900px; margin:20px auto; padding:0 16px; }
  input[type=text], input[type=password] { padding:10px; width:70%; border-radius:8px; border:1px solid #ccc; margin-bottom:10px; }
  button { padding:10px 16px; border:none; border-radius:8px; background:#4f46e5; color:white; cursor:pointer; transition:0.2s; }
  button:hover { background:#3730a3; }
  .card { background:white; padding:12px 16px; margin-bottom:12px; border-radius:12px; box-shadow:0 2px 8px rgba(0,0,0,0.08); }
  .post-header { display:flex; justify-content:space-between; font-size:14px; color:#555; margin-bottom:6px; }
  .feed, .room-messages { margin-top:20px; }
  h2 { margin-top:32px; }
  .hidden { display:none; }
</style>
</head>
<body>
<header>Weave</header>
<div class="container">

<!-- Authentication -->
<div id="authBox">
  <h2>Sign In / Sign Up</h2>
  <input type="text" id="usernameInput" placeholder="Username"><br>
  <input type="password" id="passwordInput" placeholder="Password"><br>
  <button onclick="signIn()">Sign In</button>
  <button onclick="signUp()">Sign Up</button>
  <button onclick="guestLogin()">Enter as Guest</button>
</div>

<!-- Main Content -->
<div id="mainContent" class="hidden">
  <h2>Feed</h2>
  <div>
    <input type="text" id="postInput" placeholder="What's on your mind?">
    <button onclick="createPost()">Post</button>
  </div>
  <div id="feedContainer" class="feed"></div>

  <h2>Rooms</h2>
  <div>
    <input type="text" id="roomInput" placeholder="Create or join room">
    <button onclick="joinRoom()">Join</button>
  </div>
  <div id="roomContainer" class="room-messages"></div>
</div>

<script>
let currentUser = null;
let currentRoom = null;
let guestCount = 0;

// Authentication
async function signUp() {
  const username = document.getElementById('usernameInput').value.trim();
  const password = document.getElementById('passwordInput').value.trim();
  if(!username || !password) return alert("Enter username and password");
  if(username.toLowerCase() === "anonymous") return alert("Username 'anonymous' is reserved");

  const user = new Parse.User();
  user.set("username", username);
  user.set("password", password);

  try {
    await user.signUp();
    alert("Account created! You can now sign in.");
  } catch(e) { alert("Error: " + e.message); }
}

async function signIn() {
  const username = document.getElementById('usernameInput').value.trim();
  const password = document.getElementById('passwordInput').value.trim();
  if(!username || !password) return alert("Enter username and password");

  try {
    await Parse.User.logIn(username, password);
    currentUser = username;
    localStorage.setItem('currentUser', currentUser);
    document.getElementById('authBox').classList.add('hidden');
    document.getElementById('mainContent').classList.remove('hidden');
    renderFeed();
  } catch(e) { alert("Error: " + e.message); }
}

function guestLogin() {
  guestCount++;
  currentUser = "anonymous" + guestCount;
  localStorage.setItem('currentUser', currentUser);
  document.getElementById('authBox').classList.add('hidden');
  document.getElementById('mainContent').classList.remove('hidden');
  renderFeed();
}

// Posts
async function createPost() {
  const text = document.getElementById('postInput').value.trim();
  if(!text) return;

  const Post = Parse.Object.extend("Posts");
  const post = new Post();
  post.set("user", currentUser);
  post.set("text", text);
  post.set("likes", 0);
  post.set("timestamp", new Date());

  await post.save();
  document.getElementById('postInput').value = '';
  renderFeed();
}

async function renderFeed() {
  const query = new Parse.Query("Posts");
  query.ascending("timestamp");
  const posts = await query.find();
  const feed = document.getElementById('feedContainer');
  feed.innerHTML = '';
  posts.forEach(p => {
    const div = document.createElement('div');
    div.className = 'card';
    const date = new Date(p.get('timestamp')).toLocaleString();
    div.innerHTML = `<div class='post-header'><span>@${p.get('user')}</span><span>${date}</span></div><div>${p.get('text')}</div><button onclick="likePost('${p.id}')">❤️ ${p.get('likes')}</button>`;
    feed.appendChild(div);
  });
}

async function likePost(postId) {
  const query = new Parse.Query("Posts");
  const post = await query.get(postId);
  post.increment("likes");
  await post.save();
  renderFeed();
}

// Rooms
async function joinRoom() {
  const roomName = document.getElementById('roomInput').value.trim();
  if(!roomName) return;
  const Room = Parse.Object.extend("Rooms");
  const roomQuery = new Parse.Query("Rooms");
  roomQuery.equalTo("name", roomName);
  let room = await roomQuery.first();
  if(!room){
    room = new Room();
    room.set("name", roomName);
    await room.save();
  }
  currentRoom = roomName;
  renderRoomMessages();
}

async function sendMessage(text) {
  if(!currentRoom || !text) return;
  const Message = Parse.Object.extend("Messages");
  const msg = new Message();
  msg.set("roomId", currentRoom);
  msg.set("user", currentUser);
  msg.set("text", text);
  msg.set("likes", 0);
  msg.set("timestamp", new Date());
  await msg.save();
  renderRoomMessages();
}

async function renderRoomMessages() {
  const query = new Parse.Query("Messages");
  query.equalTo("roomId", currentRoom);
  query.ascending("timestamp");
  const messages = await query.find();
  const container = document.getElementById('roomContainer');
  container.innerHTML = `<h3>Room: ${currentRoom}</h3><input type='text' id='roomMsgInput' placeholder='Message'><button onclick="sendMessage(document.getElementById('roomMsgInput').value); document.getElementById('roomMsgInput').value=''">Send</button><div id='roomPosts'></div>`;
  const postsDiv = document.getElementById('roomPosts');
  messages.forEach(m => {
    const div = document.createElement('div');
    div.className = 'card';
    const date = new Date(m.get('timestamp')).toLocaleString();
    div.innerHTML = `<div class='post-header'><span>@${m.get('user')}</span><span>${date}</span></div><div>${m.get('text')}</div><button onclick="likeRoomMessage('${m.id}')">❤️ ${m.get('likes')}</button>`;
    postsDiv.appendChild(div);
  });
}

async function likeRoomMessage(msgId) {
  const query = new Parse.Query("Messages");
  const msg = await query.get(msgId);
  msg.increment("likes");
  await msg.save();
  renderRoomMessages();
}
</script>
</div>
</body>
</html>
